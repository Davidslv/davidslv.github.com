<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Davidslv</title>
    <description>I&#39;ve been programming in Ruby commercially since 2011 and I&#39;ve built awesome projects and worked in amazing teams ever since!
</description>
    <link>http://davidslv.com/</link>
    <atom:link href="http://davidslv.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 08 Oct 2015 01:05:47 +0100</pubDate>
    <lastBuildDate>Thu, 08 Oct 2015 01:05:47 +0100</lastBuildDate>
    <generator>Jekyll v2.5.2</generator>
    
      <item>
        <title>Setup a Raspiberry Pi to mine cryptocurrency</title>
        <description>&lt;p&gt;I’ve been &lt;a href=&quot;https://en.bitcoin.it/wiki/Mining&quot; target=&quot;\_blank&quot;&gt;mining&lt;/a&gt; since May 2015, with 3 &lt;a href=&quot;http://ecx.images-amazon.com/images/I/81J3I--QY5L._SY355_.jpg&quot; target=&quot;\_blank&quot;&gt;Rockminer R-BOX&lt;/a&gt; giving a total of 300Gh/s,
although it sounds like a lot of speed, I wouldn’t recommend you to mine &lt;a href=&quot;https://bitcoin.org/en/&quot; target=&quot;\_blank&quot;&gt;Bitcoins&lt;/a&gt; as that requires much more &lt;a href=&quot;https://bitcoin.org/en/vocabulary#hash-rate&quot; target=&quot;\_blank&quot;&gt;hash rate&lt;/a&gt; to be processed, and you will be spending more money in electricity than getting any Bitcoins.
You should assume that at this moment mining should be seen as non-profitable hobby, my main goal was just to fulfill my curiosity.&lt;/p&gt;

&lt;p&gt;The hardware I used:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;1 raspberry pi (Quad Core), I used other models but they crashed after a few hours…&lt;/li&gt;
  &lt;li&gt;1 usb hub&lt;/li&gt;
  &lt;li&gt;1 corsair CX 600M Power Supply&lt;/li&gt;
  &lt;li&gt;3 Rockminer R-BOX&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Assuming you already have the operating system &lt;a href=&quot;https://www.raspberrypi.org/downloads/&quot; target=&quot;\_blank&quot;&gt;Raspbian&lt;/a&gt;, open the command line (Terminal) and type the following:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install libusb-1.0-0-dev libusb-1.0-0 libcurl4-openssl-dev libncurses5-dev libudev-dev -y&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;When you finished updating and installing the needed packages go ahead and download &lt;strong&gt;cgminer&lt;/strong&gt; (that’s the latest stable version at the moment of my writing)&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;wget http://ck.kolivas.org/apps/cgminer/cgminer-4.9.1.tar.bz2&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And then “unzip” it&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;tar xvf cgminer-4.9.1.tar.bz2&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Enter &lt;strong&gt;cgminer&lt;/strong&gt; directory:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;cd cgminer-4.9.1/
    ./configure --enable-icarus
    sudo make &amp;amp;&amp;amp; sudo make install&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;After installing it all you need to do is to find a mining pool to join. And the &lt;strong&gt;stratum&lt;/strong&gt; url will be given to you, make sure you setup a worker and a password for it.&lt;/p&gt;

&lt;p&gt;Then all you need to do is:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;cgminer --icarus-options 115200:1:1 -o stratum+tcp://MININGPOOL_URL_HERE.com:2222 -u WORKER_NAME_HERE -p PASSWORD_HERE&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;When you see that everything is up and running I recommend you to write that command in &lt;strong&gt;/etc/rc.local&lt;/strong&gt; so it starts mining on startup, avoiding you to have to write it all the time you restart your raspberry pi.&lt;/p&gt;

&lt;p&gt;Have fun, enjoy the noise :D&lt;/p&gt;

&lt;p&gt;David Silva&lt;/p&gt;
</description>
        <pubDate>Thu, 08 Oct 2015 02:00:00 +0100</pubDate>
        <link>http://davidslv.com/cryptocurrency/2015/10/08/setup-raspberry-pi-to-mine-cryptocurrency.html</link>
        <guid isPermaLink="true">http://davidslv.com/cryptocurrency/2015/10/08/setup-raspberry-pi-to-mine-cryptocurrency.html</guid>
        
        <category>cryptocurrency</category>
        
        <category>blackcoin</category>
        
        <category>mining</category>
        
        <category>raspberry-pi</category>
        
        
        <category>cryptocurrency</category>
        
      </item>
    
      <item>
        <title>How to protect your credentials on Gemfile.lock</title>
        <description>&lt;p&gt;As you might know, it isn’t a good idea to store any kind of credentials under your VCS (like git).&lt;/p&gt;

&lt;p&gt;Although if you have some private gems you probably wrote this on your Gemfile:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;https://username:password@gemserver.com&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And then someone told you you should have the username and password stored in &lt;a href=&quot;https://en.wikipedia.org/wiki/Environment_variable&quot; target=&quot;\_blank&quot;&gt;Environment Variables&lt;/a&gt; so you went and assigned
the username and password to them and your Gemfile became like this:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;https://&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;USERNAME&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;PASSWORD&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;@gemserver.com&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;But… did you notice what happens when you run &lt;code&gt;bundle&lt;/code&gt;?&lt;/p&gt;

&lt;p&gt;Your Gemfile.lock now has the username and password written there, so much for the
environment variables right?&lt;/p&gt;

&lt;p&gt;The bundler team heard your prayers and they actually &lt;a href=&quot;http://bundler.io/man/bundle-config.1.html#CREDENTIALS-FOR-GEM-SOURCES&quot; target=&quot;\_blank&quot;&gt;implemented something&lt;/a&gt; to solve this problem!&lt;/p&gt;

&lt;p&gt;So all you need to do is go back to your Gemfile and remove the credentials from the url like so:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;https://gemserver.com&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And now create an environment variable called &lt;code&gt;BUNDLE_GEMSERVER__COM&lt;/code&gt;, this will match the url &lt;code&gt;gemserver.com&lt;/code&gt;
where the dot (.) becomes two underscores (__).&lt;/p&gt;

&lt;p&gt;I would suggest you to wrap those two ENV’s with the new &lt;code&gt;BUNDLE_*&lt;/code&gt;, specially if you have to go and change your
continuous integration setup and then you have to go and change your staging and production servers, or maybe you are already using
those values somewhere in your project, don’t worry you can wrap them like so:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;BUNDLE_GEMSERVER__COM=&amp;quot;$USERNAME:$PASSWORD&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This is the equivalent of doing the following:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;bundle config gems.unii.com $UNII_GEMS_USERNAME:$UNII_GEMS_PASSWORD&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now all you have to do is go through all the stages of your project that need that ENV and you will be fine.&lt;/p&gt;

&lt;p&gt;Also, you might have to update your bundler, I’ve updated mine to 1.10.6 as version 1.7.4 didn’t had this feature.&lt;/p&gt;

&lt;p&gt;Thank you for reading.&lt;/p&gt;

&lt;p&gt;David Silva&lt;/p&gt;
</description>
        <pubDate>Mon, 05 Oct 2015 23:40:00 +0100</pubDate>
        <link>http://davidslv.com/ruby/programming/2015/10/05/how-to-protect-your-credentials-on-gemfile-lock.html</link>
        <guid isPermaLink="true">http://davidslv.com/ruby/programming/2015/10/05/how-to-protect-your-credentials-on-gemfile-lock.html</guid>
        
        <category>ruby</category>
        
        <category>development</category>
        
        <category>gemfile</category>
        
        <category>bundler</category>
        
        <category>credentials</category>
        
        
        <category>ruby</category>
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>Mixpanel - How to deal with external services</title>
        <description>&lt;p&gt;I’ve been using &lt;a href=&quot;http://mixpanel.com&quot; target=&quot;\_blank&quot;&gt;Mixpanel&lt;/a&gt; for the two weeks now.&lt;/p&gt;

&lt;p&gt;I’ve followed their documentation and we were sending millions of requests to their servers until last night. Seems that one of their servers went down and caused our requests to start failing which caused our end to start clogging. Although we though we were sending too many requests and for that mixpanel had blocked us temporarily (fortunately not the case but it lead us to point 2 - keep reading).&lt;/p&gt;

&lt;p&gt;This made me understand two things:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Because their service was down, our Sidekiq Queue was increasing and the jobs were failing, but by default Sidekiq retries them, preventing the crucial jobs to get run.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;If you expect to send a massive amount of events then the mixpanel default consumer is not for you (I explain why in a second).&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;What you can do to prevent the first from happening again is having a safety point, for example here I check if the size of the queue is less than 100k to send another Mixpanel event, if it isn’t is just better not to send the event than crashing the application.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Sidekiq&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Queue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;mixpanel&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100_000&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;MixpanelWorker&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;perform_async&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;event_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The second one is more interesting, the ruby mixpanel library has another consumer, called &lt;a href=&quot;https://github.com/mixpanel/mixpanel-ruby/blob/master/lib/mixpanel-ruby/consumer.rb#L145&quot; target=&quot;\_blank&quot;&gt;BufferedConsumer&lt;/a&gt; which basically allocates 50 events in memory before it sends them all together in a single request, which basically reduces your requests by a lot if you think about it.&lt;/p&gt;

&lt;p&gt;Although what is really great is using it in a connection pool, which you can achieve thanks to &lt;a href=&quot;http://www.mikeperham.com/&quot; target=&quot;\_blank&quot;&gt;Mike Perham&lt;/a&gt; with his another awesome open source contribution: &lt;a href=&quot;https://github.com/mperham/connection_pool&quot; target=&quot;\_blank&quot;&gt;connection_pool&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;vg&quot;&gt;$mixpanel_buffer_pool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ConnectionPool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;MIXPANEL_POOL_CONCURRENCY&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;Mixpanel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;BufferedConsumer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# and initialize your Mixpanel::Tracker like so&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;tracker&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Mixpanel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Tracker&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;MIXPANEL_TOKEN&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;vg&quot;&gt;$mixpanel_buffer_pool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;I think it’s wise to have this philosophy that if you using a service which you can’t control try to isolate it as much as possible from causing any side effects on your app. It’s ok if their service is down for some reason in this case, because our app doesn’t depend on them for anything other than sending events, and it’s ok if we miss some events, what is not ok is if our service gets clogged and we can’t provide a good service to our users.&lt;/p&gt;

&lt;p&gt;Thank you for reading.&lt;/p&gt;

&lt;p&gt;David Silva&lt;/p&gt;
</description>
        <pubDate>Thu, 29 Jan 2015 22:40:00 +0000</pubDate>
        <link>http://davidslv.com/ruby/development/mixpanel/services/open-source/2015/01/29/mixpanel.html</link>
        <guid isPermaLink="true">http://davidslv.com/ruby/development/mixpanel/services/open-source/2015/01/29/mixpanel.html</guid>
        
        
        <category>ruby</category>
        
        <category>development</category>
        
        <category>mixpanel</category>
        
        <category>services</category>
        
        <category>open-source</category>
        
      </item>
    
      <item>
        <title>Welcome to 2015!</title>
        <description>&lt;p&gt;Happy New Year 2015!&lt;/p&gt;

&lt;p&gt;Recently I’ve read an &lt;a href=&quot;http://www.morgadinho.org/2014/12/28/doing-things-you-like-is-not-a-waste-of-time/&quot; target=&quot;\_blank&quot;&gt;article&lt;/a&gt; from a friend
which I completely agree with, and I would like to emphasis that whatever you do at work, avoid &lt;a href=&quot;http://en.wikipedia.org/wiki/Burnout_(psychology){:target=&amp;quot;\_blank&amp;quot;}&quot;&gt;Burnout!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I used to spend hours at night reading all the things I could to keep myself on track,
but that eventually dragged me into burnout, I was consuming so much information
and going to bed so late that the next day my productivity wouldn’t be as great as if
I had a proper rest.&lt;/p&gt;

&lt;p&gt;I’ve been always hungry to learn, but what I wasn’t realising was the quality of what I
was reading, most things I’ve read and I spent time on wasn’t exactly the right
things for me. With the help of colleagues and friends I understand where to
search for what I need and most important not waste my time reading unnecessary
things, for example as Ruby developer I like to know what’s going on,
so I follow &lt;a href=&quot;http://rubyweekly.com/&quot; target=&quot;\_blank&quot;&gt;Ruby Weekly&lt;/a&gt;, if you are a Perl or JavaScript
I know they have their own weekly emails as well, this allows you to keep on
track of what is changing and what is new.&lt;/p&gt;

&lt;p&gt;What I’m trying to say is by keeping your sources of information right it can
save you a lot of your time, like a ex-colleague told me once “The good articles will bubble up”,
also keep time for yourself, your friends, your family, because if you end up sucking all your time
on work related things you might end up looking up your shoulder one day and everyone is gone!&lt;/p&gt;

&lt;p&gt;Honestly I think a bit of “fresh air” always helps you achieving your goals,
think about things you like to do, make them your hobby (cooking, walk, take photos, play games, be with friends), you will be impressed how disconnecting from work actually helps you being connected (&lt;a href=&quot;https://www.youtube.com/watch?v=7ae0tzVo8Fw&quot; target=&quot;\_blank&quot;&gt;Disconnect to Connect&lt;/a&gt;). If you can’t think of anything
simply leave your comfort zone, get out, you will find something, believe me.&lt;/p&gt;

&lt;p&gt;That’s why I decided to start 2015 with a 2 weeks away from programming, I
felt I needed time for myself, to disconnect from what I do on a daily basis,
and honestly it feels good, I totally recommend you.&lt;/p&gt;

&lt;p&gt;Thank you for reading,&lt;/p&gt;

&lt;p&gt;David Silva&lt;/p&gt;
</description>
        <pubDate>Mon, 05 Jan 2015 22:40:00 +0000</pubDate>
        <link>http://davidslv.com/life/coding/resolution/2015/01/05/welcome-to-2015.html</link>
        <guid isPermaLink="true">http://davidslv.com/life/coding/resolution/2015/01/05/welcome-to-2015.html</guid>
        
        
        <category>life</category>
        
        <category>coding</category>
        
        <category>resolution</category>
        
      </item>
    
      <item>
        <title>Handmade Hero on OSX</title>
        <description>&lt;p&gt;I’ve been following &lt;a href=&quot;http://handmadehero.org/&quot; target=&quot;\_blank&quot;&gt;Handmade Hero&lt;/a&gt; basically since the beginning,
although I know myself too well to start watching the videos straight away, it’s like
watching a TV-Show and when the episode ends you just want to jump to the next one!
I simply can’t wait! So I gave it time to have more videos and then I can catch up.&lt;/p&gt;

&lt;p&gt;Now was the moment for me to start, there are 20 videos on &lt;a href=&quot;https://www.youtube.com/user/handmadeheroarchive&quot; target=&quot;\_blank&quot;&gt;Youtube&lt;/a&gt;,
&lt;a href=&quot;http://mollyrocket.com/casey/about.html&quot; target=&quot;\_blank&quot;&gt;Casey Muratori&lt;/a&gt; has been doing an excelent work explaining everything to us and
I just can’t wait to start seeing more and more! Also I liked it so much that I contributed by Pre-Ordering which gives you access to the source code.&lt;/p&gt;

&lt;p&gt;There’s only one problem, I only use OSX as my Operative System and right now the videos are very focused on Windows Operative System,
but that is no show stopper! No, no, no!&lt;/p&gt;

&lt;p&gt;Furtunately there’s been a lot of attention, and lots of people believe in this project and they have been helping out!
I found out that &lt;a href=&quot;http://davidgow.net/&quot; target=&quot;\_blank&quot;&gt;David Gow&lt;/a&gt; is doing a port for Linux which he called it
&lt;a href=&quot;http://davidgow.net/handmadepenguin/&quot; target=&quot;\_blank&quot;&gt;Handmade Penguin&lt;/a&gt; and I’m very grateful for that!&lt;/p&gt;

&lt;p&gt;There’s a few caveats from following David’s code, because Linux and Unix are
very similar systems, but as they say the beauty (or headache) is in the details!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Some tips:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;You should install &lt;a href=&quot;https://www.libsdl.org/download-2.0.php&quot; target=&quot;\_blank&quot;&gt;SDL&lt;/a&gt; from source, so you have it available on the terminal.&lt;/li&gt;
  &lt;li&gt;David suggests KDevelop for debugging, but you will not find it on OSX, I found instead &lt;a href=&quot;http://clewn.sourceforge.net/install.html&quot; target=&quot;\_blank&quot;&gt;Clewn&lt;/a&gt;,
but I didn’t install it as it depends on netbeans and felt like too much effort for now, maybe on a later stage.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;surprise-surprise&quot;&gt; Surprise, Surprise!&lt;/h2&gt;

&lt;p&gt;I followed Chapter 1 and Chapter 2, when I finished my code on Chapter 2 based on David’s I notice that something was wrong,
initially I thought that I had missed something, the window was suppose to be flickery when it was resized or dragged around,
but such thing wasn’t happening, so I decided to print some text inside the case statement, just in case it was too fast for my eyes to catch,
but after some resizes and dragging around my text didn’t appear, so there was only one explanation, it wasn’t getting inside the case statement.
As I’m not a game developer I felt the need to contact David and tell him about the situation.&lt;/p&gt;

&lt;p&gt;I sent him the following email&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Hello David,

Thanks for your time writing the Handmade Hero for Linux,
for the past 4 hours I&amp;#39;ve been reading, setup and coding what you wrote
but on OSX (sorry, it&amp;#39;s the only platform I have =D )

And I&amp;#39;m emailing you because I think something unexpected happened
(I even copy pasted your code to see if I missed something, but I didn&amp;#39;t).

According to your description the window is suppose to flicker between
black and white when the window is resized or dragged around,
although at least in OSX the case statement for SDL_WINDOWEVENT_EXPOSED
is never executed, and I know that because I added a printf in the beginning,
and as you can see in the screenshot the message never appears.

Do you have any idea why this happens?
I have the code on github if you just want to double check,
but is basically the same as if I had copy pasted your code.
https://github.com/Davidslv/handmade-fan

Thank you for your time and enjoy your weekend,
David Silva&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;For my surprise David actually answered my email, which I think it was very kind of him,
honestly there’s not that many developers that take their time to answer, specially on a weekend!
His answer was very friendly and detailed why the situation differs from both operating systems.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Hi,

Glad you&amp;#39;re enjoying Handmade Penguin.

I _do_ in fact have an idea as to why this happens! Basically OSX
behaves a bit differently: expose messages don&amp;#39;t happen by default.

We can look through the SDL code to see how things work. The code
to generate the SDL_WINDOWEVENT_EXPOSED event on OSX is in a &amp;quot;handler&amp;quot;
for the &amp;quot;windowDidExpose&amp;quot; notification:

https://hg.libsdl.org/SDL/file/a40415296b77/src/video/cocoa/SDL_cocoawindow.m#l459

This is a bit hard to find, but if we look at the Apple documentation here:

https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/WinPanel/Tasks/SettingWindowImageAttr.html

We see that windows on OSX can have different &amp;quot;backing store&amp;quot; types.
There are three types &amp;quot;buffered&amp;quot;, &amp;quot;retained&amp;quot; and &amp;quot;nonretained&amp;quot;. Of
these, &amp;quot;nonretained&amp;quot; behaves as one would expect: only the exposed
regions are redrawn and we get expose events. &amp;quot;buffered&amp;quot; behaves more
like a compositing window manager: we render the window to an offscreen
buffer, and the system then redraws the contents of that when needed.
SDL uses a buffered window (it&amp;#39;s the default), and so never gets exposed
events.

Ultimately, the only difference we have is that OSX doesn&amp;#39;t sent Exposed
messages when the window is resized, whereas X11 usually does.
You could get back the behaviour by running your draw code in the
SDL_WINDOWEVENT_RESIZED (or SDL_WINDOWEVENT_SIZE_CHANGED) event handlers.

Cheers,
— David&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I think this is very important to share because allows people to understand that
different operating systems behave differently even when they are quite similar.&lt;/p&gt;

&lt;p&gt;And as David says “this is a bit hard to find”, if he never replied I probably
would never get it because SDL, C++ and game developing itself is out of my
comfort zone, I don’t do it on a daily basis which makes it difficult to know
what to search for when you are in need.&lt;/p&gt;

&lt;p&gt;Thank you for reading,&lt;/p&gt;

&lt;p&gt;David Silva&lt;/p&gt;
</description>
        <pubDate>Sat, 13 Dec 2014 22:40:00 +0000</pubDate>
        <link>http://davidslv.com/c++/handmade/gamedev/2014/12/13/handmade-hero-on-osx.html</link>
        <guid isPermaLink="true">http://davidslv.com/c++/handmade/gamedev/2014/12/13/handmade-hero-on-osx.html</guid>
        
        
        <category>c++</category>
        
        <category>handmade</category>
        
        <category>gamedev</category>
        
      </item>
    
      <item>
        <title>Welcome!</title>
        <description>&lt;p&gt;I used to blog on &lt;a href=&quot;http://davidslv.tumblr.com/&quot; target=&quot;\_blank&quot;&gt;tumblr&lt;/a&gt;, but definitely is not
the best place to blog technical stuff.&lt;/p&gt;

&lt;p&gt;So welcome to my new blog, I feel it’s yet another one in the middle of so many,
will see what happens from now on… I hope I can give you some good insights of
my experiences.&lt;/p&gt;

&lt;p&gt;Enjoy,
David Silva&lt;/p&gt;
</description>
        <pubDate>Sat, 13 Dec 2014 20:10:53 +0000</pubDate>
        <link>http://davidslv.com/welcome/2014/12/13/welcome-to-jekyll.html</link>
        <guid isPermaLink="true">http://davidslv.com/welcome/2014/12/13/welcome-to-jekyll.html</guid>
        
        
        <category>welcome</category>
        
      </item>
    
  </channel>
</rss>
